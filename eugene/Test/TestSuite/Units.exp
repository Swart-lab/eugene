#============================================================================
#=             Copyright (c) 2002 by INRA. All rights reserved.             
#=                 Redistribution is not permitted without                  
#=                 the express written permission of INRA.                 
#=                     Mail : tschiex@toulouse.inra.fr                     
#=-------------------------------------------------------------------------
#= File         : EuGeneTk/Test/TestSuite/Units.exp
#= Description  : Unit test script test each sensor separately
#= Authors      : P.Bardou, S.Foissac, M.J.Cros, A.Moisan, T.Schiex         
#===========================================================================


foreach TEST $AllSensorsList {

    # To follow execution
    puts "Performing $TEST unit test"

    # Run EuGene
    if {$TEST != "Est" && $TEST != "Tester"} {
	eval exec $EUGENE_DIR/$EUGENE $OPTIONS(Sensor) \
	    -D Sensor.${TEST}.use=TRUE $SEQ_DIR/$SEQ(Sensor) \
	2> tmp%stderr > tmp%stdout
    } else {
	if {$TEST == "Est"} {
	    eval exec $EUGENE_DIR/$EUGENE $OPTIONS(Sensor) \
		-D Sensor.${TEST}.use=TRUE -D Sensor.NG2.use=TRUE \
		$SEQ_DIR/$SEQ(Sensor) 2> tmp%stderr > tmp%stdout
	} else {
	    catch {exec rm test.EuStop.gff}
	    eval exec $EUGENE_DIR/$EUGENE $OPTIONS(Sensor) \
		-D Sensor.${TEST}.use=TRUE $SEQ_DIR/exSeqHom.fasta  \
		2> tmp%stderr > tmp%stdout
	}
    }

    set out [open tmp%stdout {RDONLY}]
    set err [open tmp%stderr {RDONLY}]
    set std [open tmp%$TEST w+]
    
    # Copy stderr and stdout in the reference file
    set f [read -nonewline $err]
    puts $std $f
    set f [read -nonewline $out]
    puts $std $f

    close $out
    close $err
    close $std

    exec rm tmp%stderr tmp%stdout

    # Remove the first lines related to version number
    RemoveFirstLines tmp%$TEST

    # Compare ingnoring the case of letters (Linux inf/SUN Inf)
    if {[file exists tmp%testdiff] == 1} {
	exec rm tmp%testdiff
    }
    catch {exec diff -i $OUTPUT_DIR/Output_${TEST} tmp%$TEST > tmp%testdiff }
    set t [open tmp%testdiff {RDONLY}]
    set difference [read $t]
    close $t
    if {$difference == ""} {
	pass "${TEST}"
	exec rm tmp%$TEST
    } else {
	fail "${TEST}"
	exec mv tmp%$TEST $TRACE_DIR/Output_${TEST}
    }

    if {$TEST == "Tester"} {
	if {[file exists tmp%testdiff] == 1} {
	    exec rm tmp%testdiff
	}
	catch {exec diff -i $OUTPUT_DIR/Output_${TEST}.gff  > tmp%testdiff }
	set t [open tmp%testdiff {RDONLY}]
	set difference [read $t]
	close $t
	if {$difference != ""} {
	    fail "${TEST} (gff)"
	    exec mv Output_${TEST}.gff $TRACE_DIR/Output_${TEST}.gff

	}
    }
    
}